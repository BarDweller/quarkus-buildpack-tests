name: Multi Platform Runner 
defaults:
  run:
    shell: bash -ieo pipefail {0}
on: 
  workflow_dispatch:

jobs:
  integration-tests:
    strategy:
      matrix:
        project: [hello-spring]
        java: [8]
        jbang: [0.84.2]
        java-buildpack-lib-jitpack: [ "com.github.BarDweller.java-buildpack-client:buildpack-client:97f2971c4c46ea01c760de4b54a8cc2baf2d84bc" ]
        runner: [ macos-13,ubuntu-24.04 ]
    runs-on: [ "${{ matrix.runner }}" ]
    name: Test Java ${{ matrix.java }} JBang ${{ matrix.jbang }} Project ${{ matrix.project }} Runner ${{ matrix.runner }}
    steps:

      - name: Freee Disk Space for Ubuntu
        if: matrix.runner == 'ubuntu-24.04'
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false

      - name: Podman Mac
        if: matrix.runner == 'macos-13'
        run: |
          echo "Doing the thing for macos"
          cd /tmp
          wget -nv "https://github.com/containers/podman/releases/download/v5.3.1/podman-installer-macos-universal.pkg"
          sudo installer -pkg /tmp/podman-installer-macos-universal.pkg -target /
          export PATH=$PATH:/opt/podman/bin
          echo "/opt/podman/bin" >> $GITHUB_PATH
          podman --log-level=debug machine init
          podman --log-level=debug machine start
          
      - name: Podman Ubuntu
        if: matrix.runner == 'ubuntu-24.04'
        run: |
          echo "Doing the thing for ubuntu" 

      - name: Podman info
        run: |
          podman info

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'

      - name: Setup sdkman
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdkman_auto_answer=false
          sdkman_selfupdate_enable=false
          echo "$HOME/.sdkman/bin" >> $GITHUB_PATH

      - name: Setup jbang
        run: |
          sdk install jbang ${{matrix.jbang}}
          sdk default jbang ${{matrix.jbang}}
          echo "$HOME/.jbang/bin" >> $GITHUB_PATH
          
      - name: Build test project
        run: |
          echo Setting up to build ${{ matrix.project }} with ${{ matrix.java-buildpack-lib-jitpack}} on ${{ matrix.runner }}
          export CURRENT_WORKFLOW_DEP=${{ matrix.java-buildpack-lib-jitpack }}
          export PROJECT_PATH=./test-projects/${{ matrix.project }}
          export JDK=${{ matrix.java }}
          chmod +x ./test-projects/RunTest.java
          ./test-projects/RunTest.java
