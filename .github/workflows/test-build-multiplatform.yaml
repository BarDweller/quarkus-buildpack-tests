name: Multi Platform Runner 

on: 
  workflow_dispatch:

jobs:
  integration-tests:
    strategy:
      fail-fast: false
      matrix:
        project: [hello-spring]
        java: [17]
        java-buildpack-lib-jitpack: [ "com.github.BarDweller.java-buildpack-client:buildpack-client:886e079b2e" ]
        runner: [ macos-13,ubuntu-24.04 ]
    runs-on: [ "${{ matrix.runner }}" ]
    name: Java ${{ matrix.java }} ${{ matrix.project }} ${{ matrix.runner }}
    steps:

      - name: Freee Disk Space for Ubuntu
        if: matrix.runner == 'ubuntu-24.04'
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false

      - name: Podman Mac
        if: matrix.runner == 'macos-13'
        run: |
          echo "Installing Podman for Mac"
          cd /tmp
          wget -nv "https://github.com/containers/podman/releases/download/v5.3.1/podman-installer-macos-universal.pkg"
          sudo installer -pkg /tmp/podman-installer-macos-universal.pkg -target /
          export PATH=$PATH:/opt/podman/bin
          echo "/opt/podman/bin" >> $GITHUB_PATH
          podman machine init
          podman machine start
          echo 'mkdir -p /etc/containers/containers.conf.d && printf "[engine]\nservice_timeout=91\n" > /etc/containers/containers.conf.d/service-timeout.conf && systemctl restart podman.socket' |  podman machine ssh --username root --
          
      - name: Podman Ubuntu
        if: matrix.runner == 'ubuntu-24.04'
        run: |
          echo "Configuring Podman for ubuntu (no-op)" 
          mkdir -p /etc/containers/containers.conf.d && printf "[engine]\nservice_timeout=91\n" > /etc/containers/containers.conf.d/service-timeout.conf
          systemctl --user start podman.socket

      - name: Podman info
        run: |
          echo "Podman information"
          podman info

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'

      - name: Setup jbang
        run: |
          curl -Ls "https://sh.jbang.dev" | bash -s - app setup
          echo "$HOME/.jbang/bin" >> $GITHUB_PATH
          
      - name: Checkout
        uses: actions/checkout@v2.3.4
        
      - name: Build test project
        run: |
          echo Setting up to build ${{ matrix.project }} with ${{ matrix.java-buildpack-lib-jitpack}} on ${{ matrix.runner }}
          export CURRENT_WORKFLOW_DEP=${{ matrix.java-buildpack-lib-jitpack }}
          export PROJECT_PATH=./test-projects/${{ matrix.project }}
          export JDK=${{ matrix.java }}

          chmod +x ./test-projects/RunTest.java
          ./test-projects/RunTest.java
